#!/usr/bin/env bash

################################################################################
# bootstrap
#
# This script is intended to set up a new Mac computer with my dotfiles and
# other development preferences.
################################################################################


# Thank you, thoughtbot!
bootstrap_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n[BOOTSTRAP] $fmt\n" "$@"
}


################################################################################
# Variable declarations
################################################################################

osname=$(uname)
COMMANDLINE_TOOLS="/Library/Developer/CommandLineTools"
OLD_DOTFILES_BACKUP=$HOME/old_dotfiles_backup
DICTIONARY_DIR=$HOME/Library/Spelling

DOTFILES_REPO_URL="https://github.com/joshukraine/dotfiles.git"
DOTFILES_BRANCH="master"
DOTFILES_DIR=$HOME/dotfiles

BOOTSTRAP_REPO_URL="https://github.com/joshukraine/mac-bootstrap.git"
BOOTSTRAP_BRANCH="mac-mini-sierra"
BOOTSTRAP_DIR=$HOME/mac-bootstrap


################################################################################
# Make sure we're on a Mac before continuing
################################################################################

if [ "$osname" == 'Linux' ]; then
  bootstrap_echo "Oops, looks like you're on a Linux machine. Please have a look at
  my Linux Bootstrap script: https://github.com/joshukraine/linux-bootstrap"
  exit 1
elif [ "$osname" != 'Darwin' ]; then
  bootstrap_echo "Oops, it looks like you're using a non-UNIX system. This script
only supports Mac. Exiting..."
  exit 1
fi


################################################################################
# Check for presence of command line tools if macOS
################################################################################

if [ ! -d "$COMMANDLINE_TOOLS" ]; then
  bootstrap_echo "Apple's command line developer tools must be installed before
running this script. To install them, just run 'xcode-select --install' from
the terminal and then follow the prompts. Once the command line tools have been
installed, you can try running this script again."
  exit 1
fi


################################################################################
# Clone mac-bootstrap repo
################################################################################

bootstrap_echo "Cloning mac-bootstrap repo..."
git clone $BOOTSTRAP_REPO_URL -b $BOOTSTRAP_BRANCH $BOOTSTRAP_DIR


################################################################################
# 1. Provision with my fork of Laptop (https://github.com/joshukraine/laptop)
################################################################################

bootstrap_echo "STEP 1: Installing Laptop script..."

cp $BOOTSTRAP_DIR/install/Brewfile $HOME/.Brewfile
sh $BOOTSTRAP_DIR/install/laptop 2>&1 | tee ~/laptop.log

bootstrap_echo "Done!"


################################################################################
# 2. Install Oh-My-Zsh (http://ohmyz.sh/)
################################################################################

bootstrap_echo "STEP 2: Installing Oh-My-Zsh..."

if [ -d "$HOME/.oh-my-zsh" ]; then
  rm -rf $HOME/.oh-my-zsh
fi

git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh

bootstrap_echo "Done!"


################################################################################
# 3. Install NVM (https://github.com/creationix/nvm)
################################################################################

bootstrap_echo "STEP 3: Installing NVM..."

source "$BOOTSTRAP_DIR/install/nvm"

bootstrap_echo "Done!"


################################################################################
# 4. Setup dotfiles (https://github.com/joshukraine/dotfiles)
################################################################################

bootstrap_echo "STEP 4: Installing dotfiles..."

if [[ -d $DOTFILES_DIR ]]; then
  bootstrap_echo "Backing up old dotfiles to $HOME/old_dotfiles_backup..."
  rm -rf $OLD_DOTFILES_BACKUP
  cp -R $DOTFILES_DIR $OLD_DOTFILES_BACKUP
  rm -rf $DOTFILES_DIR
fi

bootstrap_echo "Cloning dotfiles repo to ${DOTFILES_DIR} ..."

git clone $DOTFILES_REPO_URL -b $DOTFILES_BRANCH $DOTFILES_DIR
source $DOTFILES_DIR/install.sh

bootstrap_echo "Done!"


################################################################################
# 5. Install ~/bin utilities
################################################################################

bootstrap_echo "STEP 5: Installing ~/bin utilities..."

cp -R $BOOTSTRAP_DIR/bin/* $HOME/bin/

bootstrap_echo "Done!"


################################################################################
# 6. Install Ukrainian language utilities
#
# Reference:
# * http://apple.stackexchange.com/a/11842/75491
# * http://extensions.services.openoffice.org/en/project/ukrainian-dictionary
################################################################################

bootstrap_echo "STEP 6: Installing Ukrainian language utilities..."

cp $BOOTSTRAP_DIR/lib/{hyph_uk.dic,uk_UA.aff,uk_UA.dic} $DICTIONARY_DIR

git clone https://github.com/joshukraine/xkbswitch-macosx
cp xkbswitch-macosx/bin/xkbswitch /usr/local/bin
rm -rf xkbswitch-macosx

bootstrap_echo "Done!"


################################################################################
# 7. Install Powerline-patched fonts
################################################################################

bootstrap_echo "STEP 7: Installing fixed-width fonts patched for use with Powerline symbols..."
if [ -d "$HOME/src/fonts" ]; then
  rm -rf $HOME/src/fonts
fi
git clone https://github.com/powerline/fonts.git $HOME/src/fonts
cd $HOME/src/fonts
./install.sh
cd $HOME
rm -rf $HOME/src/fonts

bootstrap_echo "Done!"


################################################################################
# 8. Install Vundle & Vim plugins (https://github.com/VundleVim/Vundle.vim.git)
################################################################################

bootstrap_echo "STEP 8: Installing Vundle and vim plugins..."
if [ -d $HOME/.vim/bundle ]; then
  rm -rf $HOME/.vim/bundle
fi
git clone https://github.com/VundleVim/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim
cp -R $DOTFILES_DIR/vim/colors $HOME/.vim # So Vim won't complain about solarized not being found.
vim +PluginInstall +qall
rm -rf $HOME/.vim/colors

bootstrap_echo "Done!"


################################################################################
# 9. Set macOS preferences
################################################################################

bootstrap_echo "STEP 9: Setting macOS preferences..."

source "$BOOTSTRAP_DIR/install/macos-defaults"
source "$BOOTSTRAP_DIR/install/macos-dock"
rm -rf $BOOTSTRAP_DIR

bootstrap_echo "Done!"


echo
echo "**********************************************************************"
echo "**** Mac Bootstrap script complete! Please restart your computer. ****"
echo "**********************************************************************"
echo
